{"version":3,"file":"static/js/380.f2997645.chunk.js","mappings":"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","sources":["redux/ContactsRedux/contactsSelector.js","webpack://react-homework-template/./src/components/Contacts/Contacts.module.css?5e71","components/Contacts/Contacts.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://react-homework-template/./src/components/PhonebookForm/PhonebookForm.module.css?56c1","components/PhonebookForm/PhonebookForm.jsx","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["export const contactItems = state => state.contacts.items;\nexport const filterItems = state => state.filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Contacts_container__SkTzd\",\"list\":\"Contacts_list__R3QeP\",\"item\":\"Contacts_item__WTDnh\",\"text\":\"Contacts_text__Cijp1\",\"btn\":\"Contacts_btn__rNftF\"};","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact, getContacts } from 'redux/ContactsRedux/contacts.operatons';\nimport { contactItems, filterItems } from 'redux/ContactsRedux/contactsSelector';\n\nimport css from './Contacts.module.css';\n\nconst Contacts = () => {\n  const filterState = useSelector(filterItems);\n  const contacts = useSelector(contactItems);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getContacts());\n  }, [dispatch]);\n\n  const filterContacts = (contacts, filterState) => {\n    return filterState\n      ? contacts.filter(contact =>\n          contact.name.toLowerCase().includes(filterState.toLowerCase())\n        )\n      : contacts;\n  };\n\n  const filteredContacts = filterContacts(contacts, filterState);\n  // console.log(filteredContacts);\n  // \n  return (\n    <div className={css.container}>\n      <ul className={css.list}>\n        {filteredContacts?.map(({ name, id, number }) => {\n          // console.log(name);\n          return (\n            <li key={id} className={css.item}>\n              <p className={css.text}>\n                {name}: <span>{number}</span>\n              </p>\n              <button\n                className={css.btn}\n                onClick={() => dispatch(deleteContact(id))}\n                type=\"button\"\n              >\n                Delete\n              </button>\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n\n\n\nexport default Contacts;\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"Filter_wrapper__9Ksqy\",\"inputFilter\":\"Filter_inputFilter__8QMOp\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { filterContacts } from 'redux/FilterRedux/filterSlice';\nimport css from './Filter.module.css';\n\nconst Filter = () => {\n  const filter = useSelector(state => state.filter);\n  const dispatch = useDispatch();\n\n  return (\n    <div className={css.wrapper}>\n      <input\n        className={css.inputFilter}\n        onChange={(e)=>dispatch(filterContacts(e.target.value))}\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n      />\n    </div>\n  );\n};\n\nexport default Filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"PhonebookForm_container__eeR0i\",\"text\":\"PhonebookForm_text__7HBrP\",\"inputValue\":\"PhonebookForm_inputValue__G1g81\",\"btn\":\"PhonebookForm_btn__sTg+T\"};","import { nanoid } from 'nanoid';\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport css from './PhonebookForm.module.css';\nimport Notiflix from 'notiflix';\n// import { fetchContacts } from 'sevices/mockaAPI';\nimport { addContact } from 'redux/ContactsRedux/contacts.operatons';\nimport { contactItems } from 'redux/ContactsRedux/contactsSelector';\n\nconst PhonebookForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const contacts = useSelector(contactItems);\n  const dispatch = useDispatch();\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  const handleSubmitt = e => {\n    e.preventDefault();\n    if (\n      contacts.filter(contact => {\n        return contact.name === name;\n      }).length\n    ) {\n      return Notiflix.Notify.warning(`${name} in already in contacts`);\n    }\n    const contact = { name: e.target.name.value, number: e.target.number.value };\n    // dispatch(addContacts(name,number));\n    dispatch(addContact(contact));\n    reset();\n  };\n\n  const id = nanoid();\n\n  return (\n    <>\n      <form className={css.container} onSubmit={handleSubmitt}>\n        <label htmlFor={id}>\n          <p className={css.text}>Name</p>\n          <input\n            className={css.inputValue}\n            onChange={handleChange}\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            id={id}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n        </label>\n        <label htmlFor={id}>\n          <p className={css.text}>Number</p>\n          <input\n            className={css.inputValue}\n            onChange={handleChange}\n            type=\"tel\"\n            name=\"number\"\n            value={number}\n            id={id}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n        </label>\n        <button className={css.btn} type=\"submit\">\n          add conttact\n        </button>\n      </form>\n    </>\n  );\n};\n\nexport default PhonebookForm;\n","import Contacts from 'components/Contacts/Contacts';\nimport Filter from 'components/Filter/Filter';\nimport LoaderSpiner from 'components/LoaderSpiner/LoaderSpiner';\nimport PhonebookForm from 'components/PhonebookForm/PhonebookForm';\nimport { Suspense } from 'react';\n\nconst ContactsPage = () => {\n  return (\n    <>\n      <h1>Phonebook</h1>\n      <PhonebookForm />\n      <h2>Contacts</h2>\n      <Filter />\n      <Suspense fallback={<LoaderSpiner />}>\n        <Contacts />\n      </Suspense>\n    </>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["contactItems","state","contacts","items","filterItems","filter","filterState","useSelector","dispatch","useDispatch","useEffect","getContacts","filteredContacts","contact","name","toLowerCase","includes","filterContacts","className","css","map","id","number","onClick","deleteContact","type","onChange","e","target","value","useState","setName","setNumber","handleChange","nanoid","onSubmit","preventDefault","length","Notiflix","addContact","htmlFor","pattern","title","required","Suspense","fallback","LoaderSpiner"],"sourceRoot":""}